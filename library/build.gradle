plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
    alias(libs.plugins.dokka)
    alias(libs.plugins.validator)
}

apply from: 'jacoco.gradle'

tasks.named("dokkaHtml") {
    moduleName.set("PushPushGo SDK")
}

android {
    compileSdkVersion 33

    namespace 'com.pushpushgo.sdk'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33

        consumerProguardFiles("ppgo-sdk.pro")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation libs.androidx.preference

    implementation libs.kodein

    implementation libs.coroutines.core
    implementation libs.coroutines.android
    implementation libs.coroutines.guava

    implementation libs.retrofit
    implementation libs.retrofit.moshi
    implementation platform(libs.okhttp.bom)
    implementation 'com.squareup.okhttp3:logging-interceptor'

    implementation libs.moshi
    kapt libs.moshi.codegen
    implementation libs.moshi.adapters

    implementation libs.androidx.work.runtime
    implementation libs.androidx.work.gcm

    compileOnly platform(libs.firebase.bom)
    compileOnly 'com.google.firebase:firebase-messaging-ktx'

    compileOnly libs.hms.push

    // testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.13.2"
    testImplementation 'org.json:json:20220320'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.4'
    testImplementation 'org.robolectric:robolectric:4.9'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

def configArtifactId = 'sdk'
def configGroupId = 'com.pushpushgo'

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact androidSourcesJar

                groupId = configGroupId
                artifactId = configArtifactId
                version = libs.versions.sdk.get()
            }
        }
    }
}
